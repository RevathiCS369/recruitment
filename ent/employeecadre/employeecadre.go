// Code generated by ent, DO NOT EDIT.

package employeecadre

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the employeecadre type in the database.
	Label = "employee_cadre"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "cadreid"
	// FieldCadrecode holds the string denoting the cadrecode field in the database.
	FieldCadrecode = "cadrecode"
	// FieldCadredescription holds the string denoting the cadredescription field in the database.
	FieldCadredescription = "cadredescription"
	// FieldPayLevel holds the string denoting the paylevel field in the database.
	FieldPayLevel = "pay_level"
	// FieldScale holds the string denoting the scale field in the database.
	FieldScale = "scale"
	// Table holds the table name of the employeecadre in the database.
	Table = "EmployeeCadre"
)

// Columns holds all SQL columns for employeecadre fields.
var Columns = []string{
	FieldID,
	FieldCadrecode,
	FieldCadredescription,
	FieldPayLevel,
	FieldScale,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the EmployeeCadre queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCadrecode orders the results by the cadrecode field.
func ByCadrecode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCadrecode, opts...).ToFunc()
}

// ByCadredescription orders the results by the cadredescription field.
func ByCadredescription(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCadredescription, opts...).ToFunc()
}

// ByPayLevel orders the results by the PayLevel field.
func ByPayLevel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPayLevel, opts...).ToFunc()
}

// ByScale orders the results by the Scale field.
func ByScale(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScale, opts...).ToFunc()
}
