// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

// ExamEligibility holds the schema definition for the ExamEligibility entity.
type ExamEligibility struct {
	ent.Schema
}

// Fields of the ExamEligibility.
func (ExamEligibility) Fields() []ent.Field {
	return []ent.Field{field.Int32("id").
		//field.Int16("examcode").Positive(),
		/*field.UUID("id", uuid.UUID{}).
		Default(uuid.New).
		StorageKey("examEligibilityCode"),*/StorageKey("EligibilityCode"), field.Int32("Examcode"), field.String("AgeCriteria").Optional(), field.String("ServiceCriteria").Optional(), field.String("DrivingLicenseCriteria").Optional(), field.Int32("NotifyCode").Optional(), field.Int32("EmployeeCadreID").Optional(), field.Int32("CategoryID").Optional()}

	// Edges of the ExamEligibility.

}

func (ExamEligibility) Edges() []ent.Edge {
	return []ent.Edge{edge.To("age_eligibilities", AgeEligibility.Type)}

}
func (ExamEligibility) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "ExamEligibility"}}
}
