// Code generated by entimport, DO NOT EDIT.

package schema

import (
	//"crypto/internal/edwards25519/field"

	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

// Exam holds the schema definition for the Exam entity.
type Exam struct {
	ent.Schema
}

/// Fields of the Exam.
func (Exam) Fields() []ent.Field {
	return []ent.Field{field.Int32("id").StorageKey("ExamCode"), field.String("ExamName"), field.Int32("NumOfPapers"),

		/*field.UUID("id", uuid.UUID{}).
		Default(uuid.New).*/

		field.String("NotificationBy"),
		field.String("ConductedBy"), field.Int32("NodalOfficerLevel").Optional(),
		field.Int32("CalendarCode").Optional(),
		field.Int32("PaperCode").Optional(),}

}

// Edges of the Exam.
func (Exam) Edges() []ent.Edge {
	return []ent.Edge{//edge.From(
		//"employee_cadre", EmployeeCadre.Type).Ref("exams").Unique().Field("NodalOfficerLevel"),
	edge.To("nodal_officers", NodalOfficer.Type),
	edge.To("notifications", Notification.Type),
	//edge.To("exam", Exam.Type).Ref("papers").Unique().Field("ExamCode"),
	edge.To("exams_ref", ExamCalendar.Type),
	edge.To("papers", ExamPapers.Type),
	}

}
func (Exam) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "Exam"}}
}
