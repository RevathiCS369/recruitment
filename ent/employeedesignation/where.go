// Code generated by ent, DO NOT EDIT.

package employeedesignation

import (
	"recruit/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLTE(FieldID, id))
}

// DesignationCode applies equality check predicate on the "DesignationCode" field. It's identical to DesignationCodeEQ.
func DesignationCode(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldDesignationCode, v))
}

// DesignationDescription applies equality check predicate on the "DesignationDescription" field. It's identical to DesignationDescriptionEQ.
func DesignationDescription(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldDesignationDescription, v))
}

// DesignationCodeEQ applies the EQ predicate on the "DesignationCode" field.
func DesignationCodeEQ(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldDesignationCode, v))
}

// DesignationCodeNEQ applies the NEQ predicate on the "DesignationCode" field.
func DesignationCodeNEQ(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNEQ(FieldDesignationCode, v))
}

// DesignationCodeIn applies the In predicate on the "DesignationCode" field.
func DesignationCodeIn(vs ...string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldIn(FieldDesignationCode, vs...))
}

// DesignationCodeNotIn applies the NotIn predicate on the "DesignationCode" field.
func DesignationCodeNotIn(vs ...string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNotIn(FieldDesignationCode, vs...))
}

// DesignationCodeGT applies the GT predicate on the "DesignationCode" field.
func DesignationCodeGT(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGT(FieldDesignationCode, v))
}

// DesignationCodeGTE applies the GTE predicate on the "DesignationCode" field.
func DesignationCodeGTE(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGTE(FieldDesignationCode, v))
}

// DesignationCodeLT applies the LT predicate on the "DesignationCode" field.
func DesignationCodeLT(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLT(FieldDesignationCode, v))
}

// DesignationCodeLTE applies the LTE predicate on the "DesignationCode" field.
func DesignationCodeLTE(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLTE(FieldDesignationCode, v))
}

// DesignationCodeContains applies the Contains predicate on the "DesignationCode" field.
func DesignationCodeContains(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldContains(FieldDesignationCode, v))
}

// DesignationCodeHasPrefix applies the HasPrefix predicate on the "DesignationCode" field.
func DesignationCodeHasPrefix(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldHasPrefix(FieldDesignationCode, v))
}

// DesignationCodeHasSuffix applies the HasSuffix predicate on the "DesignationCode" field.
func DesignationCodeHasSuffix(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldHasSuffix(FieldDesignationCode, v))
}

// DesignationCodeEqualFold applies the EqualFold predicate on the "DesignationCode" field.
func DesignationCodeEqualFold(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEqualFold(FieldDesignationCode, v))
}

// DesignationCodeContainsFold applies the ContainsFold predicate on the "DesignationCode" field.
func DesignationCodeContainsFold(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldContainsFold(FieldDesignationCode, v))
}

// DesignationDescriptionEQ applies the EQ predicate on the "DesignationDescription" field.
func DesignationDescriptionEQ(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEQ(FieldDesignationDescription, v))
}

// DesignationDescriptionNEQ applies the NEQ predicate on the "DesignationDescription" field.
func DesignationDescriptionNEQ(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNEQ(FieldDesignationDescription, v))
}

// DesignationDescriptionIn applies the In predicate on the "DesignationDescription" field.
func DesignationDescriptionIn(vs ...string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldIn(FieldDesignationDescription, vs...))
}

// DesignationDescriptionNotIn applies the NotIn predicate on the "DesignationDescription" field.
func DesignationDescriptionNotIn(vs ...string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldNotIn(FieldDesignationDescription, vs...))
}

// DesignationDescriptionGT applies the GT predicate on the "DesignationDescription" field.
func DesignationDescriptionGT(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGT(FieldDesignationDescription, v))
}

// DesignationDescriptionGTE applies the GTE predicate on the "DesignationDescription" field.
func DesignationDescriptionGTE(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldGTE(FieldDesignationDescription, v))
}

// DesignationDescriptionLT applies the LT predicate on the "DesignationDescription" field.
func DesignationDescriptionLT(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLT(FieldDesignationDescription, v))
}

// DesignationDescriptionLTE applies the LTE predicate on the "DesignationDescription" field.
func DesignationDescriptionLTE(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldLTE(FieldDesignationDescription, v))
}

// DesignationDescriptionContains applies the Contains predicate on the "DesignationDescription" field.
func DesignationDescriptionContains(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldContains(FieldDesignationDescription, v))
}

// DesignationDescriptionHasPrefix applies the HasPrefix predicate on the "DesignationDescription" field.
func DesignationDescriptionHasPrefix(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldHasPrefix(FieldDesignationDescription, v))
}

// DesignationDescriptionHasSuffix applies the HasSuffix predicate on the "DesignationDescription" field.
func DesignationDescriptionHasSuffix(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldHasSuffix(FieldDesignationDescription, v))
}

// DesignationDescriptionEqualFold applies the EqualFold predicate on the "DesignationDescription" field.
func DesignationDescriptionEqualFold(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldEqualFold(FieldDesignationDescription, v))
}

// DesignationDescriptionContainsFold applies the ContainsFold predicate on the "DesignationDescription" field.
func DesignationDescriptionContainsFold(v string) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(sql.FieldContainsFold(FieldDesignationDescription, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EmployeeDesignation) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EmployeeDesignation) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EmployeeDesignation) predicate.EmployeeDesignation {
	return predicate.EmployeeDesignation(func(s *sql.Selector) {
		p(s.Not())
	})
}
